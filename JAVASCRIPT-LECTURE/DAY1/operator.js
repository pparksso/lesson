//연산자 1. 산술연상자

console.log((0.1).toString(2)); //순환 소수 // 64bit +,- 11 지수부분 , 52

// 소수를 2진수로 바꿀 때 무한소수 또는 순환소수로 나타나는 경우 유한한 숫자로 바꾸어야한다. 이때 연산의 오류가 나타난다.

console.log((0.123 + 0.245).toFixed(3)); //toFixed 소수점 이하 자리수를 정확하게 갖는 문자열 표현으로 반환

const 오만원 = parseInt(256730 / 50000);
const 만원 = parseInt((256730 % 50000) / 10000);
const 오천원 = parseInt((256730 % 10000) / 5000);
const 천원 = parseInt((256730 % 5000) / 1000);
const 오백원 = parseInt((256730 % 1000) / 500);
const 백원 = parseInt((256730 % 500) / 100);
const 오십원 = parseInt((256730 % 100) / 50);
const 십원 = parseInt((256730 % 50) / 10);

console.log(`오만원은 ${오만원}장이고 만원은 ${만원}장이고 오천원은 ${오천원}장이고 
천원은 ${천원}장이고 오백원은 ${오백원}장이고 백원은 ${백원}장이고 오십원은 ${오십원}장이며,
십원은 ${십원}장이다.`);
